import com.google.common.io.Files

apply plugin: 'com.android.application'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.24.3'
    }
}

apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.google.com' }
    maven { url 'https://maven.fabric.io/public' }
}

def getLocalProperty(String propertyName, String dflt) {
    def propsFile = rootProject.file('local-accounts.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        def prop = props[propertyName]
        return prop == null ? dflt : prop
    } else {
        return dflt
    }
}

android {

    preBuild.doFirst {

        File f = rootProject.file("local-accounts.properties");
        if (!f.exists()) {
            File tmpl = rootProject.file("local-accounts-template.properties");
            println tmpl.canonicalPath
            assert tmpl.exists();
            Files.copy(tmpl, f);
        }
        assert rootProject.file("local-accounts.properties").exists()
    }

    compileSdkVersion 25
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId 'net.droegemueller.av4ms'
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        manifestPlaceholders = [fabricApiKey: getLocalProperty("fabric_api_key", "ffffffffffffffffffffffffffffffffffffffff")]
    }
    buildTypes {

        release {
            applicationIdSuffix ".release"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
    }
    productFlavors {
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile project(':core')
    compile('com.crashlytics.sdk.android:crashlytics:2.7.0@aar') {
        transitive = true;
    }
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support.constraint:constraint-layout-solver:1.0.2'
    compile 'com.jakewharton:butterknife:8.8.1'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    testCompile 'junit:junit:4.12'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.0.1'
    provided 'javax.annotation:jsr250-api:1.0'
    compile 'org.greenrobot:eventbus:3.0.0'}
